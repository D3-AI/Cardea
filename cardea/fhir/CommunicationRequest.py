from .fhirbase import fhirbase


class CommunicationRequest(fhirbase):
    """
    A request to convey information; e.g. the CDS system proposes that an
    alert be sent to a responsible provider, the CDS system proposes that
    the public health agency be notified about a reportable condition.
    """

    __name__ = 'CommunicationRequest'

    def __init__(self, dict_values=None):
        self.resourceType = 'CommunicationRequest'
        """
        This is a CommunicationRequest resource

        type: string
        possible values: CommunicationRequest
        """

        self.basedOn = None
        """
        A plan or proposal that is fulfilled in whole or in part by this
        request.

        type: array
        reference to Reference: identifier
        """

        self.replaces = None
        """
        Completed or terminated request(s) whose function is taken by this new
        request.

        type: array
        reference to Reference: identifier
        """

        self.groupIdentifier = None
        """
        A shared identifier common to all requests that were authorized more
        or less simultaneously by a single author, representing the identifier
        of the requisition, prescription or similar form.

        reference to Identifier
        """

        self.status = None
        """
        The status of the proposal or order.

        type: string
        """

        self.category = None
        """
        The type of message to be sent such as alert, notification, reminder,
        instruction, etc.

        type: array
        reference to CodeableConcept
        """

        self.priority = None
        """
        Characterizes how quickly the proposed act must be initiated. Includes
        concepts such as stat, urgent, routine.

        type: string
        """

        self.medium = None
        """
        A channel that was used for this communication (e.g. email, fax).

        type: array
        reference to CodeableConcept
        """

        self.subject = None
        """
        The patient or group that is the focus of this communication request.

        reference to Reference: identifier
        """

        self.recipient = None
        """
        The entity (e.g. person, organization, clinical information system,
        device, group, or care team) which is the intended target of the
        communication.

        type: array
        reference to Reference: identifier
        """

        self.topic = None
        """
        The resources which were related to producing this communication
        request.

        type: array
        reference to Reference: identifier
        """

        self.context = None
        """
        The encounter or episode of care within which the communication
        request was created.

        reference to Reference: identifier
        """

        self.payload = None
        """
        Text, attachment(s), or resource(s) to be communicated to the
        recipient.

        type: array
        reference to CommunicationRequest_Payload
        """

        self.occurrenceDateTime = None
        """
        The time when this communication is to occur.

        type: string
        """

        self.occurrencePeriod = None
        """
        The time when this communication is to occur.

        reference to Period
        """

        self.authoredOn = None
        """
        For draft requests, indicates the date of initial creation.  For
        requests with other statuses, indicates the date of activation.

        type: string
        """

        self.sender = None
        """
        The entity (e.g. person, organization, clinical information system, or
        device) which is to be the source of the communication.

        reference to Reference: identifier
        """

        self.requester = None
        """
        The individual who initiated the request and has responsibility for
        its activation.

        reference to CommunicationRequest_Requester
        """

        self.reasonCode = None
        """
        Describes why the request is being made in coded or textual form.

        type: array
        reference to CodeableConcept
        """

        self.reasonReference = None
        """
        Indicates another resource whose existence justifies this request.

        type: array
        reference to Reference: identifier
        """

        self.note = None
        """
        Comments made about the request by the requester, sender, recipient,
        subject or other participants.

        type: array
        reference to Annotation
        """

        self.identifier = None
        """
        A unique ID of this request for reference purposes. It must be
        provided if user wants it returned as part of any output, otherwise it
        will be autogenerated, if needed, by CDS system. Does not need to be
        the actual ID of the source system.

        type: array
        reference to Identifier
        """

        if dict_values:
            self.set_attributes(dict_values)

    def get_relationships(self):

        return [
            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'medium'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'reasonCode'},

            {'parent_entity': 'CommunicationRequest_Requester',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'requester'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'context'},

            {'parent_entity': 'CommunicationRequest_Payload',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'payload'},

            {'parent_entity': 'Annotation',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'note'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'reasonReference'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'recipient'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'replaces'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'category'},

            {'parent_entity': 'Period',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'occurrencePeriod'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'subject'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'identifier'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'sender'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'topic'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'groupIdentifier'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest',
             'child_variable': 'basedOn'},
        ]


class CommunicationRequest_Payload(fhirbase):
    """
    A request to convey information; e.g. the CDS system proposes that an
    alert be sent to a responsible provider, the CDS system proposes that
    the public health agency be notified about a reportable condition.
    """

    __name__ = 'CommunicationRequest_Payload'

    def __init__(self, dict_values=None):
        self.contentString = None
        """
        The communicated content (or for multi-part communications, one
        portion of the communication).

        type: string
        """

        self.contentAttachment = None
        """
        The communicated content (or for multi-part communications, one
        portion of the communication).

        reference to Attachment
        """

        self.contentReference = None
        """
        The communicated content (or for multi-part communications, one
        portion of the communication).

        reference to Reference: identifier
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)

    def get_relationships(self):

        return [
            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest_Payload',
             'child_variable': 'contentReference'},

            {'parent_entity': 'Attachment',
             'parent_variable': 'object_id',
             'child_entity': 'CommunicationRequest_Payload',
             'child_variable': 'contentAttachment'},
        ]


class CommunicationRequest_Requester(fhirbase):
    """
    A request to convey information; e.g. the CDS system proposes that an
    alert be sent to a responsible provider, the CDS system proposes that
    the public health agency be notified about a reportable condition.
    """

    __name__ = 'CommunicationRequest_Requester'

    def __init__(self, dict_values=None):
        self.agent = None
        """
        The device, practitioner, etc. who initiated the request.

        reference to Reference: identifier
        """

        self.onBehalfOf = None
        """
        The organization the device or practitioner was acting on behalf of.

        reference to Reference: identifier
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)

    def get_relationships(self):

        return [
            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest_Requester',
             'child_variable': 'agent'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'CommunicationRequest_Requester',
             'child_variable': 'onBehalfOf'},
        ]
