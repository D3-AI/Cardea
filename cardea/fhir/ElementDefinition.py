from .fhirbase import fhirbase


class ElementDefinition(fhirbase):
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    """

    __name__ = 'ElementDefinition'

    def __init__(self, dict_values=None):
        self.path = None
        """
        The path identifies the element and is expressed as a "."-separated
        list of ancestor elements, beginning with the name of the resource or
        extension.

        type: string
        """

        self.representation = None
        """
        Codes that define how this element is represented in instances, when
        the deviation varies from the normal case.

        type: array
        possible values: xmlAttr, xmlText, typeAttr, cdaText, xhtml
        """

        self.sliceName = None
        """
        The name of this element definition slice, when slicing is working.
        The name must be a token with no dots or spaces. This is a unique name
        referring to a specific set of constraints applied to this element,
        used to provide a name to different slices of the same element.

        type: string
        """

        self.label = None
        """
        A single preferred label which is the text to display beside the
        element indicating its meaning or to use to prompt for the element in
        a user display or form.

        type: string
        """

        self.code = None
        """
        A code that has the same meaning as the element in a particular
        terminology.

        type: array
        reference to Coding
        """

        self.slicing = None
        """
        Indicates that the element is sliced into a set of alternative
        definitions (i.e. in a structure definition, there are multiple
        different constraints on a single element in the base resource).
        Slicing can be used in any resource that has cardinality ..* on the
        base resource, or any resource with a choice of types. The set of
        slices is any elements that come after this in the element sequence
        that have the same path, until a shorter path occurs (the shorter path
        terminates the set).

        reference to ElementDefinition_Slicing
        """

        self.short = None
        """
        A concise description of what this element means (e.g. for use in
        autogenerated summaries).

        type: string
        """

        self.definition = None
        """
        Provides a complete explanation of the meaning of the data element for
        human readability.  For the case of elements derived from existing
        elements (e.g. constraints), the definition SHALL be consistent with
        the base definition, but convey the meaning of the element in the
        particular context of use of the resource.

        type: string
        """

        self.comment = None
        """
        Explanatory notes and implementation guidance about the data element,
        including notes about how to use the data properly, exceptions to
        proper use, etc.

        type: string
        """

        self.requirements = None
        """
        This element is for traceability of why the element was created and
        why the constraints exist as they do. This may be used to point to
        source materials or specifications that drove the structure of this
        element.

        type: string
        """

        self.alias = None
        """
        Identifies additional names by which this element might also be known.

        type: array
        """

        self.min = None
        """
        The minimum number of times this element SHALL appear in the instance.

        type: int
        """

        self.max = None
        """
        The maximum number of times this element is permitted to appear in the
        instance.

        type: string
        """

        self.base = None
        """
        Information about the base definition of the element, provided to make
        it unnecessary for tools to trace the deviation of the element through
        the derived and related profiles. This information is provided when
        the element definition is not the original definition of an element -
        i.g. either in a constraint on another type, or for elements from a
        super type in a snap shot.

        reference to ElementDefinition_Base
        """

        self.contentReference = None
        """
        Identifies the identity of an element defined elsewhere in the profile
        whose content rules should be applied to the current element.

        type: string
        """

        self.type = None
        """
        The data type or resource that the value of this element is permitted
        to be.

        type: array
        reference to ElementDefinition_Type
        """

        self.defaultValueBoolean = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: boolean
        """

        self.defaultValueInteger = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: int
        """

        self.defaultValueDecimal = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: int
        """

        self.defaultValueBase64Binary = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueInstant = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueString = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueUri = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueDate = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueDateTime = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueTime = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueCode = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueOid = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueUuid = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueId = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueUnsignedInt = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: int
        """

        self.defaultValuePositiveInt = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: int
        """

        self.defaultValueMarkdown = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        type: string
        """

        self.defaultValueElement = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Element: id
        """

        self.defaultValueExtension = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Extension
        """

        self.defaultValueBackboneElement = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to BackboneElement
        """

        self.defaultValueNarrative = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Narrative
        """

        self.defaultValueAnnotation = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Annotation
        """

        self.defaultValueAttachment = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Attachment
        """

        self.defaultValueIdentifier = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Identifier
        """

        self.defaultValueCodeableConcept = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to CodeableConcept
        """

        self.defaultValueCoding = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Coding
        """

        self.defaultValueQuantity = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Quantity
        """

        self.defaultValueDuration = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Duration
        """

        self.defaultValueSimpleQuantity = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Quantity
        """

        self.defaultValueDistance = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Distance
        """

        self.defaultValueCount = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Count
        """

        self.defaultValueMoney = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Money
        """

        self.defaultValueAge = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Age
        """

        self.defaultValueRange = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Range
        """

        self.defaultValuePeriod = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Period
        """

        self.defaultValueRatio = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Ratio
        """

        self.defaultValueReference = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Reference: identifier
        """

        self.defaultValueSampledData = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to SampledData
        """

        self.defaultValueSignature = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Signature
        """

        self.defaultValueHumanName = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to HumanName
        """

        self.defaultValueAddress = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Address
        """

        self.defaultValueContactPoint = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to ContactPoint
        """

        self.defaultValueTiming = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Timing
        """

        self.defaultValueMeta = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Meta
        """

        self.defaultValueElementDefinition = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to ElementDefinition
        """

        self.defaultValueContactDetail = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to ContactDetail
        """

        self.defaultValueContributor = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Contributor
        """

        self.defaultValueDosage = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to Dosage
        """

        self.defaultValueRelatedArtifact = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to RelatedArtifact
        """

        self.defaultValueUsageContext = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to UsageContext
        """

        self.defaultValueDataRequirement = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to DataRequirement
        """

        self.defaultValueParameterDefinition = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to ParameterDefinition
        """

        self.defaultValueTriggerDefinition = None
        """
        The value that should be used if there is no value stated in the
        instance (e.g. 'if not otherwise specified, the abstract is false').

        reference to TriggerDefinition
        """

        self.meaningWhenMissing = None
        """
        The Implicit meaning that is to be understood when this element is
        missing (e.g. 'when this element is missing, the period is ongoing'.

        type: string
        """

        self.orderMeaning = None
        """
        If present, indicates that the order of the repeating element has
        meaning and describes what that meaning is.  If absent, it means that
        the order of the element has no meaning.

        type: string
        """

        self.fixedBoolean = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: boolean
        """

        self.fixedInteger = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: int
        """

        self.fixedDecimal = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: int
        """

        self.fixedBase64Binary = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedInstant = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedString = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedUri = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedDate = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedDateTime = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedTime = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedCode = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedOid = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedUuid = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedId = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedUnsignedInt = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: int
        """

        self.fixedPositiveInt = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: int
        """

        self.fixedMarkdown = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        type: string
        """

        self.fixedElement = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Element: id
        """

        self.fixedExtension = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Extension
        """

        self.fixedBackboneElement = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to BackboneElement
        """

        self.fixedNarrative = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Narrative
        """

        self.fixedAnnotation = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Annotation
        """

        self.fixedAttachment = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Attachment
        """

        self.fixedIdentifier = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Identifier
        """

        self.fixedCodeableConcept = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to CodeableConcept
        """

        self.fixedCoding = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Coding
        """

        self.fixedQuantity = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Quantity
        """

        self.fixedDuration = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Duration
        """

        self.fixedSimpleQuantity = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Quantity
        """

        self.fixedDistance = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Distance
        """

        self.fixedCount = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Count
        """

        self.fixedMoney = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Money
        """

        self.fixedAge = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Age
        """

        self.fixedRange = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Range
        """

        self.fixedPeriod = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Period
        """

        self.fixedRatio = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Ratio
        """

        self.fixedReference = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Reference: identifier
        """

        self.fixedSampledData = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to SampledData
        """

        self.fixedSignature = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Signature
        """

        self.fixedHumanName = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to HumanName
        """

        self.fixedAddress = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Address
        """

        self.fixedContactPoint = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to ContactPoint
        """

        self.fixedTiming = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Timing
        """

        self.fixedMeta = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Meta
        """

        self.fixedElementDefinition = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to ElementDefinition
        """

        self.fixedContactDetail = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to ContactDetail
        """

        self.fixedContributor = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Contributor
        """

        self.fixedDosage = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to Dosage
        """

        self.fixedRelatedArtifact = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to RelatedArtifact
        """

        self.fixedUsageContext = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to UsageContext
        """

        self.fixedDataRequirement = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to DataRequirement
        """

        self.fixedParameterDefinition = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to ParameterDefinition
        """

        self.fixedTriggerDefinition = None
        """
        Specifies a value that SHALL be exactly the value  for this element in
        the instance. For purposes of comparison, non-significant whitespace
        is ignored, and all values must be an exact match (case and accent
        sensitive). Missing elements/attributes must also be missing.

        reference to TriggerDefinition
        """

        self.patternBoolean = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: boolean
        """

        self.patternInteger = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: int
        """

        self.patternDecimal = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: int
        """

        self.patternBase64Binary = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternInstant = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternString = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternUri = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternDate = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternDateTime = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternTime = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternCode = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternOid = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternUuid = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternId = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternUnsignedInt = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: int
        """

        self.patternPositiveInt = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: int
        """

        self.patternMarkdown = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        type: string
        """

        self.patternElement = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Element: id
        """

        self.patternExtension = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Extension
        """

        self.patternBackboneElement = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to BackboneElement
        """

        self.patternNarrative = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Narrative
        """

        self.patternAnnotation = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Annotation
        """

        self.patternAttachment = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Attachment
        """

        self.patternIdentifier = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Identifier
        """

        self.patternCodeableConcept = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to CodeableConcept
        """

        self.patternCoding = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Coding
        """

        self.patternQuantity = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Quantity
        """

        self.patternDuration = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Duration
        """

        self.patternSimpleQuantity = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Quantity
        """

        self.patternDistance = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Distance
        """

        self.patternCount = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Count
        """

        self.patternMoney = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Money
        """

        self.patternAge = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Age
        """

        self.patternRange = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Range
        """

        self.patternPeriod = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Period
        """

        self.patternRatio = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Ratio
        """

        self.patternReference = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Reference: identifier
        """

        self.patternSampledData = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to SampledData
        """

        self.patternSignature = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Signature
        """

        self.patternHumanName = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to HumanName
        """

        self.patternAddress = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Address
        """

        self.patternContactPoint = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to ContactPoint
        """

        self.patternTiming = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Timing
        """

        self.patternMeta = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Meta
        """

        self.patternElementDefinition = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to ElementDefinition
        """

        self.patternContactDetail = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to ContactDetail
        """

        self.patternContributor = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Contributor
        """

        self.patternDosage = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to Dosage
        """

        self.patternRelatedArtifact = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to RelatedArtifact
        """

        self.patternUsageContext = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to UsageContext
        """

        self.patternDataRequirement = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to DataRequirement
        """

        self.patternParameterDefinition = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to ParameterDefinition
        """

        self.patternTriggerDefinition = None
        """
        Specifies a value that the value in the instance SHALL follow - that
        is, any value in the pattern must be found in the instance. Other
        additional values may be found too. This is effectively constraint by
        example.  The values of elements present in the pattern must match
        exactly (case-sensitive, accent-sensitive, etc.).

        reference to TriggerDefinition
        """

        self.example = None
        """
        A sample value for this element demonstrating the type of information
        that would typically be found in the element.

        type: array
        reference to ElementDefinition_Example
        """

        self.minValueDate = None
        """
        The minimum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: string
        """

        self.minValueDateTime = None
        """
        The minimum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: string
        """

        self.minValueInstant = None
        """
        The minimum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: string
        """

        self.minValueTime = None
        """
        The minimum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: string
        """

        self.minValueDecimal = None
        """
        The minimum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: int
        """

        self.minValueInteger = None
        """
        The minimum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: int
        """

        self.minValuePositiveInt = None
        """
        The minimum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: int
        """

        self.minValueUnsignedInt = None
        """
        The minimum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: int
        """

        self.minValueQuantity = None
        """
        The minimum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        reference to Quantity
        """

        self.maxValueDate = None
        """
        The maximum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: string
        """

        self.maxValueDateTime = None
        """
        The maximum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: string
        """

        self.maxValueInstant = None
        """
        The maximum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: string
        """

        self.maxValueTime = None
        """
        The maximum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: string
        """

        self.maxValueDecimal = None
        """
        The maximum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: int
        """

        self.maxValueInteger = None
        """
        The maximum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: int
        """

        self.maxValuePositiveInt = None
        """
        The maximum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: int
        """

        self.maxValueUnsignedInt = None
        """
        The maximum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        type: int
        """

        self.maxValueQuantity = None
        """
        The maximum allowed value for the element. The value is inclusive.
        This is allowed for the types date, dateTime, instant, time, decimal,
        integer, and Quantity.

        reference to Quantity
        """

        self.maxLength = None
        """
        Indicates the maximum length in characters that is permitted to be
        present in conformant instances and which is expected to be supported
        by conformant consumers that support the element.

        type: int
        """

        self.condition = None
        """
        A reference to an invariant that may make additional statements about
        the cardinality or value in the instance.

        type: array
        """

        self.constraint = None
        """
        Formal constraints such as co-occurrence and other constraints that
        can be computationally evaluated within the context of the instance.

        type: array
        reference to ElementDefinition_Constraint
        """

        self.mustSupport = None
        """
        If true, implementations that produce or consume resources SHALL
        provide "support" for the element in some meaningful way.  If false,
        the element may be ignored and not supported.

        type: boolean
        """

        self.isModifier = None
        """
        If true, the value of this element affects the interpretation of the
        element or resource that contains it, and the value of the element
        cannot be ignored. Typically, this is used for status, negation and
        qualification codes. The effect of this is that the element cannot be
        ignored by systems: they SHALL either recognize the element and
        process it, and/or a pre-determination has been made that it is not
        relevant to their particular system.

        type: boolean
        """

        self.isSummary = None
        """
        Whether the element should be included if a client requests a search
        with the parameter _summary=true.

        type: boolean
        """

        self.binding = None
        """
        Binds to a value set if this element is coded (code, Coding,
        CodeableConcept, Quantity), or the data types (string, uri).

        reference to ElementDefinition_Binding
        """

        self.mapping = None
        """
        Identifies a concept from an external specification that roughly
        corresponds to this element.

        type: array
        reference to ElementDefinition_Mapping
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.representation is not None:
            for value in self.representation:
                if value is not None and value.lower() not in [
                        'xmlattr', 'xmltext', 'typeattr', 'cdatext', 'xhtml']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'xmlAttr, xmlText, typeAttr, cdaText, xhtml'))

    def get_relationships(self):

        return [
            {'parent_entity': 'Range',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedRange'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueQuantity'},

            {'parent_entity': 'ParameterDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueParameterDefinition'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'minValueQuantity'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedCodeableConcept'},

            {'parent_entity': 'ElementDefinition_Type',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'type'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueIdentifier'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternReference'},

            {'parent_entity': 'RelatedArtifact',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueRelatedArtifact'},

            {'parent_entity': 'UsageContext',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedUsageContext'},

            {'parent_entity': 'ContactDetail',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternContactDetail'},

            {'parent_entity': 'Meta',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedMeta'},

            {'parent_entity': 'Narrative',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedNarrative'},

            {'parent_entity': 'Period',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternPeriod'},

            {'parent_entity': 'Period',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedPeriod'},

            {'parent_entity': 'Ratio',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedRatio'},

            {'parent_entity': 'TriggerDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternTriggerDefinition'},

            {'parent_entity': 'Distance',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedDistance'},

            {'parent_entity': 'Age',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueAge'},

            {'parent_entity': 'ParameterDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedParameterDefinition'},

            {'parent_entity': 'ContactDetail',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedContactDetail'},

            {'parent_entity': 'ParameterDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternParameterDefinition'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'maxValueQuantity'},

            {'parent_entity': 'ElementDefinition_Slicing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'slicing'},

            {'parent_entity': 'ContactPoint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternContactPoint'},

            {'parent_entity': 'Count',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternCount'},

            {'parent_entity': 'Duration',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedDuration'},

            {'parent_entity': 'Dosage',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternDosage'},

            {'parent_entity': 'ContactPoint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueContactPoint'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternSimpleQuantity'},

            {'parent_entity': 'Timing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueTiming'},

            {'parent_entity': 'Address',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternAddress'},

            {'parent_entity': 'Duration',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueDuration'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedCoding'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedReference'},

            {'parent_entity': 'ContactDetail',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueContactDetail'},

            {'parent_entity': 'ElementDefinition_Constraint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'constraint'},

            {'parent_entity': 'BackboneElement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternBackboneElement'},

            {'parent_entity': 'Range',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueRange'},

            {'parent_entity': 'HumanName',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedHumanName'},

            {'parent_entity': 'TriggerDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedTriggerDefinition'},

            {'parent_entity': 'BackboneElement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedBackboneElement'},

            {'parent_entity': 'Attachment',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedAttachment'},

            {'parent_entity': 'Age',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedAge'},

            {'parent_entity': 'Timing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternTiming'},

            {'parent_entity': 'HumanName',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueHumanName'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedSimpleQuantity'},

            {'parent_entity': 'UsageContext',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueUsageContext'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueSimpleQuantity'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueCoding'},

            {'parent_entity': 'Narrative',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternNarrative'},

            {'parent_entity': 'Signature',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedSignature'},

            {'parent_entity': 'Meta',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternMeta'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternCoding'},

            {'parent_entity': 'Ratio',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueRatio'},

            {'parent_entity': 'Period',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValuePeriod'},

            {'parent_entity': 'TriggerDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueTriggerDefinition'},

            {'parent_entity': 'SampledData',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternSampledData'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueReference'},

            {'parent_entity': 'Distance',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternDistance'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueCodeableConcept'},

            {'parent_entity': 'Money',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternMoney'},

            {'parent_entity': 'ElementDefinition_Base',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'base'},

            {'parent_entity': 'Annotation',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedAnnotation'},

            {'parent_entity': 'Contributor',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedContributor'},

            {'parent_entity': 'RelatedArtifact',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedRelatedArtifact'},

            {'parent_entity': 'Range',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternRange'},

            {'parent_entity': 'Duration',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternDuration'},

            {'parent_entity': 'DataRequirement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedDataRequirement'},

            {'parent_entity': 'Timing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedTiming'},

            {'parent_entity': 'DataRequirement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueDataRequirement'},

            {'parent_entity': 'ElementDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternElementDefinition'},

            {'parent_entity': 'Contributor',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternContributor'},

            {'parent_entity': 'Annotation',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternAnnotation'},

            {'parent_entity': 'Signature',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternSignature'},

            {'parent_entity': 'Money',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueMoney'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternIdentifier'},

            {'parent_entity': 'Annotation',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueAnnotation'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'code'},

            {'parent_entity': 'ElementDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueElementDefinition'},

            {'parent_entity': 'Money',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedMoney'},

            {'parent_entity': 'Extension',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedExtension'},

            {'parent_entity': 'Age',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternAge'},

            {'parent_entity': 'ElementDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedElementDefinition'},

            {'parent_entity': 'Attachment',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueAttachment'},

            {'parent_entity': 'Element',
             'parent_variable': 'id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedElement'},

            {'parent_entity': 'Signature',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueSignature'},

            {'parent_entity': 'ContactPoint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedContactPoint'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternQuantity'},

            {'parent_entity': 'ElementDefinition_Mapping',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'mapping'},

            {'parent_entity': 'BackboneElement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueBackboneElement'},

            {'parent_entity': 'Dosage',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueDosage'},

            {'parent_entity': 'Address',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueAddress'},

            {'parent_entity': 'Ratio',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternRatio'},

            {'parent_entity': 'ElementDefinition_Binding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'binding'},

            {'parent_entity': 'SampledData',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedSampledData'},

            {'parent_entity': 'Meta',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueMeta'},

            {'parent_entity': 'Attachment',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternAttachment'},

            {'parent_entity': 'Element',
             'parent_variable': 'id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternElement'},

            {'parent_entity': 'Dosage',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedDosage'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedQuantity'},

            {'parent_entity': 'Count',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedCount'},

            {'parent_entity': 'RelatedArtifact',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternRelatedArtifact'},

            {'parent_entity': 'Count',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueCount'},

            {'parent_entity': 'Address',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedAddress'},

            {'parent_entity': 'Element',
             'parent_variable': 'id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueElement'},

            {'parent_entity': 'ElementDefinition_Example',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'example'},

            {'parent_entity': 'Contributor',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueContributor'},

            {'parent_entity': 'Extension',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternExtension'},

            {'parent_entity': 'HumanName',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternHumanName'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternCodeableConcept'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedIdentifier'},

            {'parent_entity': 'Extension',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueExtension'},

            {'parent_entity': 'DataRequirement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternDataRequirement'},

            {'parent_entity': 'Narrative',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueNarrative'},

            {'parent_entity': 'Distance',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueDistance'},

            {'parent_entity': 'SampledData',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueSampledData'},

            {'parent_entity': 'UsageContext',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternUsageContext'},
        ]


class ElementDefinition_Slicing(fhirbase):
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    """

    __name__ = 'ElementDefinition_Slicing'

    def __init__(self, dict_values=None):
        self.discriminator = None
        """
        Designates which child elements are used to discriminate between the
        slices when processing an instance. If one or more discriminators are
        provided, the value of the child elements in the instance data SHALL
        completely distinguish which slice the element in the resource matches
        based on the allowed values for those elements in each of the slices.

        type: array
        reference to ElementDefinition_Discriminator
        """

        self.description = None
        """
        A human-readable text description of how the slicing works. If there
        is no discriminator, this is required to be present to provide
        whatever information is possible about how the slices can be
        differentiated.

        type: string
        """

        self.ordered = None
        """
        If the matching elements have to occur in the same order as defined in
        the profile.

        type: boolean
        """

        self.rules = None
        """
        Whether additional slices are allowed or not. When the slices are
        ordered, profile authors can also say that additional slices are only
        allowed at the end.

        type: string
        possible values: closed, open, openAtEnd
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.rules is not None:
            for value in self.rules:
                if value is not None and value.lower() not in [
                        'closed', 'open', 'openatend']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'closed, open, openAtEnd'))

    def get_relationships(self):

        return [
            {'parent_entity': 'ElementDefinition_Discriminator',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Slicing',
             'child_variable': 'discriminator'},
        ]


class ElementDefinition_Discriminator(fhirbase):
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    """

    __name__ = 'ElementDefinition_Discriminator'

    def __init__(self, dict_values=None):
        self.type = None
        """
        How the element value is interpreted when discrimination is evaluated.

        type: string
        possible values: value, exists, pattern, type, profile
        """

        self.path = None
        """
        A FHIRPath expression, using a restricted subset of FHIRPath, that is
        used to identify the element on which discrimination is based.

        type: string
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.type is not None:
            for value in self.type:
                if value is not None and value.lower() not in [
                        'value', 'exists', 'pattern', 'type', 'profile']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'value, exists, pattern, type, profile'))


class ElementDefinition_Base(fhirbase):
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    """

    __name__ = 'ElementDefinition_Base'

    def __init__(self, dict_values=None):
        self.path = None
        """
        The Path that identifies the base element - this matches the
        ElementDefinition.path for that element. Across FHIR, there is only
        one base definition of any element - that is, an element definition on
        a [[[StructureDefinition]]] without a StructureDefinition.base.

        type: string
        """

        self.min = None
        """
        Minimum cardinality of the base element identified by the path.

        type: int
        """

        self.max = None
        """
        Maximum cardinality of the base element identified by the path.

        type: string
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)


class ElementDefinition_Type(fhirbase):
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    """

    __name__ = 'ElementDefinition_Type'

    def __init__(self, dict_values=None):
        self.code = None
        """
        URL of Data type or Resource that is a(or the) type used for this
        element. References are URLs that are relative to
        http://hl7.org/fhir/StructureDefinition e.g. "string" is a reference
        to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are
        only allowed in logical models.

        type: string
        """

        self.profile = None
        """
        Identifies a profile structure or implementation Guide that SHALL hold
        for the datatype this element refers to. Can be a local reference - to
        a contained StructureDefinition, or a reference to another
        StructureDefinition or Implementation Guide by a canonical URL. When
        an implementation guide is specified, the resource SHALL conform to at
        least one profile defined in the implementation guide.

        type: string
        """

        self.targetProfile = None
        """
        Identifies a profile structure or implementation Guide that SHALL hold
        for the target of the reference this element refers to. Can be a local
        reference - to a contained StructureDefinition, or a reference to
        another StructureDefinition or Implementation Guide by a canonical
        URL. When an implementation guide is specified, the resource SHALL
        conform to at least one profile defined in the implementation guide.

        type: string
        """

        self.aggregation = None
        """
        If the type is a reference to another resource, how the resource is or
        can be aggregated - is it a contained resource, or a reference, and if
        the context is a bundle, is it included in the bundle.

        type: array
        possible values: contained, referenced, bundled
        """

        self.versioning = None
        """
        Whether this reference needs to be version specific or version
        independent, or whether either can be used.

        type: string
        possible values: either, independent, specific
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.aggregation is not None:
            for value in self.aggregation:
                if value is not None and value.lower() not in [
                        'contained', 'referenced', 'bundled']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'contained, referenced, bundled'))

        if self.versioning is not None:
            for value in self.versioning:
                if value is not None and value.lower() not in [
                        'either', 'independent', 'specific']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'either, independent, specific'))


class ElementDefinition_Example(fhirbase):
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    """

    __name__ = 'ElementDefinition_Example'

    def __init__(self, dict_values=None):
        self.label = None
        """
        Describes the purpose of this example amoung the set of examples.

        type: string
        """

        self.valueBoolean = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: boolean
        """

        self.valueInteger = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: int
        """

        self.valueDecimal = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: int
        """

        self.valueBase64Binary = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueInstant = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueString = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueUri = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueDate = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueDateTime = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueTime = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueCode = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueOid = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueUuid = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueId = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueUnsignedInt = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: int
        """

        self.valuePositiveInt = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: int
        """

        self.valueMarkdown = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        type: string
        """

        self.valueElement = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Element: id
        """

        self.valueExtension = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Extension
        """

        self.valueBackboneElement = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to BackboneElement
        """

        self.valueNarrative = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Narrative
        """

        self.valueAnnotation = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Annotation
        """

        self.valueAttachment = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Attachment
        """

        self.valueIdentifier = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Identifier
        """

        self.valueCodeableConcept = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to CodeableConcept
        """

        self.valueCoding = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Coding
        """

        self.valueQuantity = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Quantity
        """

        self.valueDuration = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Duration
        """

        self.valueSimpleQuantity = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Quantity
        """

        self.valueDistance = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Distance
        """

        self.valueCount = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Count
        """

        self.valueMoney = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Money
        """

        self.valueAge = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Age
        """

        self.valueRange = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Range
        """

        self.valuePeriod = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Period
        """

        self.valueRatio = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Ratio
        """

        self.valueReference = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Reference: identifier
        """

        self.valueSampledData = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to SampledData
        """

        self.valueSignature = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Signature
        """

        self.valueHumanName = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to HumanName
        """

        self.valueAddress = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Address
        """

        self.valueContactPoint = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to ContactPoint
        """

        self.valueTiming = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Timing
        """

        self.valueMeta = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Meta
        """

        self.valueElementDefinition = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        """

        self.valueContactDetail = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to ContactDetail
        """

        self.valueContributor = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Contributor
        """

        self.valueDosage = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to Dosage
        """

        self.valueRelatedArtifact = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to RelatedArtifact
        """

        self.valueUsageContext = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to UsageContext
        """

        self.valueDataRequirement = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to DataRequirement
        """

        self.valueParameterDefinition = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to ParameterDefinition
        """

        self.valueTriggerDefinition = None
        """
        The actual value for the element, which must be one of the types
        allowed for this element.

        reference to TriggerDefinition
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)

    def get_relationships(self):

        return [
            {'parent_entity': 'Money',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueMoney'},

            {'parent_entity': 'ContactDetail',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueContactDetail'},

            {'parent_entity': 'BackboneElement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueBackboneElement'},

            {'parent_entity': 'Period',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valuePeriod'},

            {'parent_entity': 'SampledData',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueSampledData'},

            {'parent_entity': 'Narrative',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueNarrative'},

            {'parent_entity': 'TriggerDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueTriggerDefinition'},

            {'parent_entity': 'HumanName',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueHumanName'},

            {'parent_entity': 'Range',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueRange'},

            {'parent_entity': 'Dosage',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueDosage'},

            {'parent_entity': 'Age',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueAge'},

            {'parent_entity': 'Distance',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueDistance'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueSimpleQuantity'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueCodeableConcept'},

            {'parent_entity': 'Extension',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueExtension'},

            {'parent_entity': 'RelatedArtifact',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueRelatedArtifact'},

            {'parent_entity': 'ContactPoint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueContactPoint'},

            {'parent_entity': 'Count',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueCount'},

            {'parent_entity': 'Attachment',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueAttachment'},

            {'parent_entity': 'DataRequirement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueDataRequirement'},

            {'parent_entity': 'UsageContext',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueUsageContext'},

            {'parent_entity': 'Element',
             'parent_variable': 'id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueElement'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueIdentifier'},

            {'parent_entity': 'Annotation',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueAnnotation'},

            {'parent_entity': 'Address',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueAddress'},

            {'parent_entity': 'Meta',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueMeta'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueQuantity'},

            {'parent_entity': 'Timing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueTiming'},

            {'parent_entity': 'Contributor',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueContributor'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueReference'},

            {'parent_entity': 'Duration',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueDuration'},

            {'parent_entity': 'Signature',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueSignature'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueCoding'},

            {'parent_entity': 'ParameterDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueParameterDefinition'},

            {'parent_entity': 'Ratio',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueRatio'},
        ]


class ElementDefinition_Constraint(fhirbase):
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    """

    __name__ = 'ElementDefinition_Constraint'

    def __init__(self, dict_values=None):
        self.key = None
        """
        Allows identification of which elements have their cardinalities
        impacted by the constraint.  Will not be referenced for constraints
        that do not affect cardinality.

        type: string
        """

        self.requirements = None
        """
        Description of why this constraint is necessary or appropriate.

        type: string
        """

        self.severity = None
        """
        Identifies the impact constraint violation has on the conformance of
        the instance.

        type: string
        possible values: error, warning
        """

        self.human = None
        """
        Text that can be used to describe the constraint in messages
        identifying that the constraint has been violated.

        type: string
        """

        self.expression = None
        """
        A [FHIRPath](http://hl7.org/fluentpath) expression of constraint that
        can be executed to see if this constraint is met.

        type: string
        """

        self.xpath = None
        """
        An XPath expression of constraint that can be executed to see if this
        constraint is met.

        type: string
        """

        self.source = None
        """
        A reference to the original source of the constraint, for traceability
        purposes.

        type: string
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.severity is not None:
            for value in self.severity:
                if value is not None and value.lower() not in [
                        'error', 'warning']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'error, warning'))


class ElementDefinition_Binding(fhirbase):
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    """

    __name__ = 'ElementDefinition_Binding'

    def __init__(self, dict_values=None):
        self.strength = None
        """
        Indicates the degree of conformance expectations associated with this
        binding - that is, the degree to which the provided value set must be
        adhered to in the instances.

        type: string
        possible values: required, extensible, preferred, example
        """

        self.description = None
        """
        Describes the intended use of this particular set of codes.

        type: string
        """

        self.valueSetUri = None
        """
        Points to the value set or external definition (e.g. implicit value
        set) that identifies the set of codes to be used. If the binding
        refers to an explicit value set - the normal case - then use a
        Reference(ValueSet) preferably containing the canonical URL for the
        value set. If the reference is to an implicit value set - usually, an
        IETF RFC that defines a grammar, such as mime types - then use a uri.

        type: string
        """

        self.valueSetReference = None
        """
        Points to the value set or external definition (e.g. implicit value
        set) that identifies the set of codes to be used. If the binding
        refers to an explicit value set - the normal case - then use a
        Reference(ValueSet) preferably containing the canonical URL for the
        value set. If the reference is to an implicit value set - usually, an
        IETF RFC that defines a grammar, such as mime types - then use a uri.

        reference to Reference: identifier
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.strength is not None:
            for value in self.strength:
                if value is not None and value.lower() not in [
                        'required', 'extensible', 'preferred', 'example']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'required, extensible, preferred, example'))

    def get_relationships(self):

        return [
            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition_Binding',
             'child_variable': 'valueSetReference'},
        ]


class ElementDefinition_Mapping(fhirbase):
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    """

    __name__ = 'ElementDefinition_Mapping'

    def __init__(self, dict_values=None):
        self.identity = None
        """
        An internal reference to the definition of a mapping.

        type: string
        """

        self.language = None
        """
        Identifies the computable language in which mapping.map is expressed.

        type: string
        """

        self.map = None
        """
        Expresses what part of the target specification corresponds to this
        element.

        type: string
        """

        self.comment = None
        """
        Comments that provide information about the mapping or its use.

        type: string
        """

        self.object_id = None
        # unique identifier for object class

        if dict_values:
            self.set_attributes(dict_values)
